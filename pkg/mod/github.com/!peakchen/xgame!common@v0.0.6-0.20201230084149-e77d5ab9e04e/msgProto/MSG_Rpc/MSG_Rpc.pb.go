// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MSG_Rpc.proto

package MSG_Rpc // import "msgProto/MSG_Rpc"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// add by stefanchen
// server
type SUBMSG int32

const (
	SUBMSG_Begin  SUBMSG = 0
	SUBMSG_CS_Rpc SUBMSG = 1
	SUBMSG_SC_Rpc SUBMSG = 2
)

var SUBMSG_name = map[int32]string{
	0: "Begin",
	1: "CS_Rpc",
	2: "SC_Rpc",
}
var SUBMSG_value = map[string]int32{
	"Begin":  0,
	"CS_Rpc": 1,
	"SC_Rpc": 2,
}

func (x SUBMSG) String() string {
	return proto.EnumName(SUBMSG_name, int32(x))
}
func (SUBMSG) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_MSG_Rpc_ae64e57bf991847c, []int{0}
}

type ErrorCode int32

const (
	ErrorCode_Invalid ErrorCode = 0
	ErrorCode_Success ErrorCode = 1
	ErrorCode_Fail    ErrorCode = 2
)

var ErrorCode_name = map[int32]string{
	0: "Invalid",
	1: "Success",
	2: "Fail",
}
var ErrorCode_value = map[string]int32{
	"Invalid": 0,
	"Success": 1,
	"Fail":    2,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_MSG_Rpc_ae64e57bf991847c, []int{1}
}

type CS_Rpc_Req struct {
	Rpcmodule            string   `protobuf:"bytes,1,opt,name=rpcmodule,proto3" json:"rpcmodule,omitempty"`
	Rpcfunc              string   `protobuf:"bytes,2,opt,name=rpcfunc,proto3" json:"rpcfunc,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_Rpc_Req) Reset()         { *m = CS_Rpc_Req{} }
func (m *CS_Rpc_Req) String() string { return proto.CompactTextString(m) }
func (*CS_Rpc_Req) ProtoMessage()    {}
func (*CS_Rpc_Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_MSG_Rpc_ae64e57bf991847c, []int{0}
}
func (m *CS_Rpc_Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_Rpc_Req.Unmarshal(m, b)
}
func (m *CS_Rpc_Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_Rpc_Req.Marshal(b, m, deterministic)
}
func (dst *CS_Rpc_Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_Rpc_Req.Merge(dst, src)
}
func (m *CS_Rpc_Req) XXX_Size() int {
	return xxx_messageInfo_CS_Rpc_Req.Size(m)
}
func (m *CS_Rpc_Req) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_Rpc_Req.DiscardUnknown(m)
}

var xxx_messageInfo_CS_Rpc_Req proto.InternalMessageInfo

func (m *CS_Rpc_Req) GetRpcmodule() string {
	if m != nil {
		return m.Rpcmodule
	}
	return ""
}

func (m *CS_Rpc_Req) GetRpcfunc() string {
	if m != nil {
		return m.Rpcfunc
	}
	return ""
}

func (m *CS_Rpc_Req) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*CS_Rpc_Req)(nil), "MSG_Rpc.CS_Rpc_Req")
	proto.RegisterEnum("MSG_Rpc.SUBMSG", SUBMSG_name, SUBMSG_value)
	proto.RegisterEnum("MSG_Rpc.ErrorCode", ErrorCode_name, ErrorCode_value)
}

func init() { proto.RegisterFile("MSG_Rpc.proto", fileDescriptor_MSG_Rpc_ae64e57bf991847c) }

var fileDescriptor_MSG_Rpc_ae64e57bf991847c = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8f, 0x41, 0x4b, 0xc4, 0x30,
	0x10, 0x46, 0x37, 0x75, 0x6d, 0xcd, 0xa8, 0x10, 0xe6, 0x94, 0x83, 0x87, 0xc5, 0xd3, 0xb2, 0x82,
	0x7b, 0xf0, 0x1f, 0xb4, 0xe8, 0xe2, 0xa1, 0x20, 0x09, 0x82, 0x78, 0x29, 0x31, 0x89, 0xa5, 0xd0,
	0x36, 0x31, 0x6d, 0xfd, 0xfd, 0x92, 0x58, 0xf1, 0xf6, 0xde, 0xcc, 0xe1, 0xe3, 0xc1, 0x75, 0x2d,
	0x4f, 0x8d, 0xf0, 0xfa, 0xde, 0x07, 0x37, 0x3b, 0x2c, 0x56, 0xbd, 0x7d, 0x03, 0xa8, 0x64, 0xa4,
	0x46, 0xd8, 0x2f, 0xbc, 0x01, 0x1a, 0xbc, 0x1e, 0x9c, 0x59, 0x7a, 0xcb, 0xc9, 0x8e, 0xec, 0xa9,
	0xf8, 0x3f, 0x20, 0x87, 0x22, 0x78, 0xfd, 0xb9, 0x8c, 0x9a, 0x67, 0xe9, 0xf7, 0xa7, 0x88, 0xb0,
	0x35, 0x6a, 0x56, 0xfc, 0x6c, 0x47, 0xf6, 0x57, 0x22, 0xf1, 0xe1, 0x0e, 0x72, 0xf9, 0x5a, 0xd6,
	0xf2, 0x84, 0x14, 0xce, 0x4b, 0xdb, 0x76, 0x23, 0xdb, 0x20, 0x40, 0xfe, 0x3b, 0xc7, 0x48, 0x64,
	0x59, 0x25, 0xce, 0x0e, 0x47, 0xa0, 0x8f, 0x21, 0xb8, 0x50, 0x39, 0x63, 0xf1, 0x12, 0x8a, 0xe7,
	0xf1, 0x5b, 0xf5, 0x9d, 0x61, 0x9b, 0x28, 0x72, 0xd1, 0xda, 0x4e, 0x13, 0x23, 0x78, 0x01, 0xdb,
	0x27, 0xd5, 0xf5, 0x2c, 0x2b, 0xf1, 0x9d, 0x0d, 0x53, 0xfb, 0x12, 0x63, 0x8e, 0x6b, 0xcb, 0x47,
	0x9e, 0xda, 0x1e, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff, 0xc4, 0xd4, 0x18, 0x48, 0xec, 0x00, 0x00,
	0x00,
}
