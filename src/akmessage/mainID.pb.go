// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: mainID.proto

package akmessage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MSG int32

const (
	MSG_NO MSG = 0 // 不可用ID
	//客户端-服务器（登录服）
	MSG_CS_ACC_REGISTER MSG = 1 //账号注册
	MSG_SC_ACC_REGISTER MSG = 2
	MSG_CS_LOGIN        MSG = 3 //登录
	MSG_SC_LOGIN        MSG = 4
	MSG_LOGIN_MAX       MSG = 100 //
	//服务器间协议（以及特殊协议）
	MSG_SS_Begin         MSG = 101 //服务器间起始协议
	MSG_SS_ROUTE         MSG = 102 //服务器间路由
	MSG_SS_REGISTER_REQ  MSG = 103 //服务器注册
	MSG_SS_REGISTER_RSP  MSG = 104
	MSG_SS_HEARTBEAT_REQ MSG = 105 //服务器间心跳
	MSG_SS_HEARTBEAT_RSP MSG = 106 //
	MSG_CS_HEARTBEAT     MSG = 107 //客户端心跳
	MSG_SC_HEARTBEAT     MSG = 108 //
	MSG_SS_MAX           MSG = 1000
	//客户端-服务器协议（game）
	MSG_CS_ENTER_GAME_SCENE MSG = 10001 //进入游戏
	MSG_SC_ENTER_GAME_SCENE MSG = 10002 //进入游戏
	MSG_CS_LOGOUT           MSG = 10003 //登出
	MSG_SC_LOGOUT           MSG = 10004 //
	//邮件相关
	MSG_CS_MAILINFO         MSG = 10105
	MSG_SC_MAILINFO         MSG = 10106
	MSG_CS_MAILREAD         MSG = 10107
	MSG_SC_MAILREAD         MSG = 10108
	MSG_CS_MAILTAKE         MSG = 10109
	MSG_SC_MAILTAKE         MSG = 10110
	MSG_CS_MAILONEKEYREAD   MSG = 10111
	MSG_SC_MAILONEKEYREAD   MSG = 10112
	MSG_CS_MAILONEKEYTAKE   MSG = 10113
	MSG_SC_MAILONEKEYTAKE   MSG = 10114
	MSG_CS_MAILDELETE       MSG = 10115
	MSG_SC_MAILDELETE       MSG = 10116
	MSG_CS_MAILONEKEYDELETE MSG = 10117
	MSG_SC_MAILONEKEYDELETE MSG = 10118
	//聊天相关
	MSG_CS_CHAT MSG = 10200
	MSG_SC_CHAT MSG = 10201
	MSG_SS_CHAT MSG = 10202
	//好友相关
	MSG_CS_FRIENDLIST   MSG = 10300
	MSG_SC_FRIENDLIST   MSG = 10301
	MSG_CS_FRIENDADD    MSG = 10302
	MSG_SC_FRIENDADD    MSG = 10303
	MSG_CS_FRIENDDELETE MSG = 10304
	MSG_SC_FRIENDDELETE MSG = 10305
	MSG_CS_FRIENDQUERY  MSG = 10306
	MSG_SC_FRIENDQUERY  MSG = 10307
	MSG_CS_FRIENDBLACK  MSG = 10308
	MSG_SC_FRIENDBLACK  MSG = 10309
	//地图相关
	MSG_SS_ENTERMAP_REQ MSG = 10400
	MSG_SS_ENTERMAP_RSP MSG = 10401
	MSG_SC_ENTERMAP     MSG = 10402
	MSG_GAME_MAX        MSG = 100000 //客户端服务器最大协议
)

// Enum value maps for MSG.
var (
	MSG_name = map[int32]string{
		0:      "NO",
		1:      "CS_ACC_REGISTER",
		2:      "SC_ACC_REGISTER",
		3:      "CS_LOGIN",
		4:      "SC_LOGIN",
		100:    "LOGIN_MAX",
		101:    "SS_Begin",
		102:    "SS_ROUTE",
		103:    "SS_REGISTER_REQ",
		104:    "SS_REGISTER_RSP",
		105:    "SS_HEARTBEAT_REQ",
		106:    "SS_HEARTBEAT_RSP",
		107:    "CS_HEARTBEAT",
		108:    "SC_HEARTBEAT",
		1000:   "SS_MAX",
		10001:  "CS_ENTER_GAME_SCENE",
		10002:  "SC_ENTER_GAME_SCENE",
		10003:  "CS_LOGOUT",
		10004:  "SC_LOGOUT",
		10105:  "CS_MAILINFO",
		10106:  "SC_MAILINFO",
		10107:  "CS_MAILREAD",
		10108:  "SC_MAILREAD",
		10109:  "CS_MAILTAKE",
		10110:  "SC_MAILTAKE",
		10111:  "CS_MAILONEKEYREAD",
		10112:  "SC_MAILONEKEYREAD",
		10113:  "CS_MAILONEKEYTAKE",
		10114:  "SC_MAILONEKEYTAKE",
		10115:  "CS_MAILDELETE",
		10116:  "SC_MAILDELETE",
		10117:  "CS_MAILONEKEYDELETE",
		10118:  "SC_MAILONEKEYDELETE",
		10200:  "CS_CHAT",
		10201:  "SC_CHAT",
		10202:  "SS_CHAT",
		10300:  "CS_FRIENDLIST",
		10301:  "SC_FRIENDLIST",
		10302:  "CS_FRIENDADD",
		10303:  "SC_FRIENDADD",
		10304:  "CS_FRIENDDELETE",
		10305:  "SC_FRIENDDELETE",
		10306:  "CS_FRIENDQUERY",
		10307:  "SC_FRIENDQUERY",
		10308:  "CS_FRIENDBLACK",
		10309:  "SC_FRIENDBLACK",
		10400:  "SS_ENTERMAP_REQ",
		10401:  "SS_ENTERMAP_RSP",
		10402:  "SC_ENTERMAP",
		100000: "GAME_MAX",
	}
	MSG_value = map[string]int32{
		"NO":                  0,
		"CS_ACC_REGISTER":     1,
		"SC_ACC_REGISTER":     2,
		"CS_LOGIN":            3,
		"SC_LOGIN":            4,
		"LOGIN_MAX":           100,
		"SS_Begin":            101,
		"SS_ROUTE":            102,
		"SS_REGISTER_REQ":     103,
		"SS_REGISTER_RSP":     104,
		"SS_HEARTBEAT_REQ":    105,
		"SS_HEARTBEAT_RSP":    106,
		"CS_HEARTBEAT":        107,
		"SC_HEARTBEAT":        108,
		"SS_MAX":              1000,
		"CS_ENTER_GAME_SCENE": 10001,
		"SC_ENTER_GAME_SCENE": 10002,
		"CS_LOGOUT":           10003,
		"SC_LOGOUT":           10004,
		"CS_MAILINFO":         10105,
		"SC_MAILINFO":         10106,
		"CS_MAILREAD":         10107,
		"SC_MAILREAD":         10108,
		"CS_MAILTAKE":         10109,
		"SC_MAILTAKE":         10110,
		"CS_MAILONEKEYREAD":   10111,
		"SC_MAILONEKEYREAD":   10112,
		"CS_MAILONEKEYTAKE":   10113,
		"SC_MAILONEKEYTAKE":   10114,
		"CS_MAILDELETE":       10115,
		"SC_MAILDELETE":       10116,
		"CS_MAILONEKEYDELETE": 10117,
		"SC_MAILONEKEYDELETE": 10118,
		"CS_CHAT":             10200,
		"SC_CHAT":             10201,
		"SS_CHAT":             10202,
		"CS_FRIENDLIST":       10300,
		"SC_FRIENDLIST":       10301,
		"CS_FRIENDADD":        10302,
		"SC_FRIENDADD":        10303,
		"CS_FRIENDDELETE":     10304,
		"SC_FRIENDDELETE":     10305,
		"CS_FRIENDQUERY":      10306,
		"SC_FRIENDQUERY":      10307,
		"CS_FRIENDBLACK":      10308,
		"SC_FRIENDBLACK":      10309,
		"SS_ENTERMAP_REQ":     10400,
		"SS_ENTERMAP_RSP":     10401,
		"SC_ENTERMAP":         10402,
		"GAME_MAX":            100000,
	}
)

func (x MSG) Enum() *MSG {
	p := new(MSG)
	*p = x
	return p
}

func (x MSG) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MSG) Descriptor() protoreflect.EnumDescriptor {
	return file_mainID_proto_enumTypes[0].Descriptor()
}

func (MSG) Type() protoreflect.EnumType {
	return &file_mainID_proto_enumTypes[0]
}

func (x MSG) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MSG.Descriptor instead.
func (MSG) EnumDescriptor() ([]byte, []int) {
	return file_mainID_proto_rawDescGZIP(), []int{0}
}

type RPCMSG int32

const (
	RPCMSG_RpcNo                RPCMSG = 0
	RPCMSG_L2G_GET_ROLE_NUM_REQ RPCMSG = 1 //L2G_Get_Role_Num_Req
	RPCMSG_G2L_GET_ROLE_NUM_RSP RPCMSG = 2 //G2L_Get_Role_Num_Rsp
)

// Enum value maps for RPCMSG.
var (
	RPCMSG_name = map[int32]string{
		0: "RpcNo",
		1: "L2G_GET_ROLE_NUM_REQ",
		2: "G2L_GET_ROLE_NUM_RSP",
	}
	RPCMSG_value = map[string]int32{
		"RpcNo":                0,
		"L2G_GET_ROLE_NUM_REQ": 1,
		"G2L_GET_ROLE_NUM_RSP": 2,
	}
)

func (x RPCMSG) Enum() *RPCMSG {
	p := new(RPCMSG)
	*p = x
	return p
}

func (x RPCMSG) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RPCMSG) Descriptor() protoreflect.EnumDescriptor {
	return file_mainID_proto_enumTypes[1].Descriptor()
}

func (RPCMSG) Type() protoreflect.EnumType {
	return &file_mainID_proto_enumTypes[1]
}

func (x RPCMSG) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RPCMSG.Descriptor instead.
func (RPCMSG) EnumDescriptor() ([]byte, []int) {
	return file_mainID_proto_rawDescGZIP(), []int{1}
}

var File_mainID_proto protoreflect.FileDescriptor

var file_mainID_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0xc7,
	0x07, 0x0a, 0x03, 0x4d, 0x53, 0x47, 0x12, 0x06, 0x0a, 0x02, 0x4e, 0x4f, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x43, 0x53, 0x5f, 0x41, 0x43, 0x43, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45,
	0x52, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x43, 0x5f, 0x41, 0x43, 0x43, 0x5f, 0x52, 0x45,
	0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x53, 0x5f, 0x4c,
	0x4f, 0x47, 0x49, 0x4e, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x43, 0x5f, 0x4c, 0x4f, 0x47,
	0x49, 0x4e, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x4d, 0x41,
	0x58, 0x10, 0x64, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x53, 0x5f, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x10,
	0x65, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x53, 0x5f, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x10, 0x66, 0x12,
	0x13, 0x0a, 0x0f, 0x53, 0x53, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x52,
	0x45, 0x51, 0x10, 0x67, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x53, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53,
	0x54, 0x45, 0x52, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x68, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x53, 0x5f,
	0x48, 0x45, 0x41, 0x52, 0x54, 0x42, 0x45, 0x41, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x69, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x53, 0x5f, 0x48, 0x45, 0x41, 0x52, 0x54, 0x42, 0x45, 0x41, 0x54, 0x5f,
	0x52, 0x53, 0x50, 0x10, 0x6a, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x53, 0x5f, 0x48, 0x45, 0x41, 0x52,
	0x54, 0x42, 0x45, 0x41, 0x54, 0x10, 0x6b, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x43, 0x5f, 0x48, 0x45,
	0x41, 0x52, 0x54, 0x42, 0x45, 0x41, 0x54, 0x10, 0x6c, 0x12, 0x0b, 0x0a, 0x06, 0x53, 0x53, 0x5f,
	0x4d, 0x41, 0x58, 0x10, 0xe8, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x43, 0x53, 0x5f, 0x45, 0x4e, 0x54,
	0x45, 0x52, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x10, 0x91, 0x4e,
	0x12, 0x18, 0x0a, 0x13, 0x53, 0x43, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x41, 0x4d,
	0x45, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x10, 0x92, 0x4e, 0x12, 0x0e, 0x0a, 0x09, 0x43, 0x53,
	0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x10, 0x93, 0x4e, 0x12, 0x0e, 0x0a, 0x09, 0x53, 0x43,
	0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x10, 0x94, 0x4e, 0x12, 0x10, 0x0a, 0x0b, 0x43, 0x53,
	0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0xf9, 0x4e, 0x12, 0x10, 0x0a, 0x0b,
	0x53, 0x43, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0xfa, 0x4e, 0x12, 0x10,
	0x0a, 0x0b, 0x43, 0x53, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x10, 0xfb, 0x4e,
	0x12, 0x10, 0x0a, 0x0b, 0x53, 0x43, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x10,
	0xfc, 0x4e, 0x12, 0x10, 0x0a, 0x0b, 0x43, 0x53, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x54, 0x41, 0x4b,
	0x45, 0x10, 0xfd, 0x4e, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x43, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x54,
	0x41, 0x4b, 0x45, 0x10, 0xfe, 0x4e, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x53, 0x5f, 0x4d, 0x41, 0x49,
	0x4c, 0x4f, 0x4e, 0x45, 0x4b, 0x45, 0x59, 0x52, 0x45, 0x41, 0x44, 0x10, 0xff, 0x4e, 0x12, 0x16,
	0x0a, 0x11, 0x53, 0x43, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x4f, 0x4e, 0x45, 0x4b, 0x45, 0x59, 0x52,
	0x45, 0x41, 0x44, 0x10, 0x80, 0x4f, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x53, 0x5f, 0x4d, 0x41, 0x49,
	0x4c, 0x4f, 0x4e, 0x45, 0x4b, 0x45, 0x59, 0x54, 0x41, 0x4b, 0x45, 0x10, 0x81, 0x4f, 0x12, 0x16,
	0x0a, 0x11, 0x53, 0x43, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x4f, 0x4e, 0x45, 0x4b, 0x45, 0x59, 0x54,
	0x41, 0x4b, 0x45, 0x10, 0x82, 0x4f, 0x12, 0x12, 0x0a, 0x0d, 0x43, 0x53, 0x5f, 0x4d, 0x41, 0x49,
	0x4c, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x83, 0x4f, 0x12, 0x12, 0x0a, 0x0d, 0x53, 0x43,
	0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x84, 0x4f, 0x12, 0x18,
	0x0a, 0x13, 0x43, 0x53, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x4f, 0x4e, 0x45, 0x4b, 0x45, 0x59, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x85, 0x4f, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x43, 0x5f, 0x4d,
	0x41, 0x49, 0x4c, 0x4f, 0x4e, 0x45, 0x4b, 0x45, 0x59, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10,
	0x86, 0x4f, 0x12, 0x0c, 0x0a, 0x07, 0x43, 0x53, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x10, 0xd8, 0x4f,
	0x12, 0x0c, 0x0a, 0x07, 0x53, 0x43, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x10, 0xd9, 0x4f, 0x12, 0x0c,
	0x0a, 0x07, 0x53, 0x53, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x10, 0xda, 0x4f, 0x12, 0x12, 0x0a, 0x0d,
	0x43, 0x53, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x4c, 0x49, 0x53, 0x54, 0x10, 0xbc, 0x50,
	0x12, 0x12, 0x0a, 0x0d, 0x53, 0x43, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x4c, 0x49, 0x53,
	0x54, 0x10, 0xbd, 0x50, 0x12, 0x11, 0x0a, 0x0c, 0x43, 0x53, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e,
	0x44, 0x41, 0x44, 0x44, 0x10, 0xbe, 0x50, 0x12, 0x11, 0x0a, 0x0c, 0x53, 0x43, 0x5f, 0x46, 0x52,
	0x49, 0x45, 0x4e, 0x44, 0x41, 0x44, 0x44, 0x10, 0xbf, 0x50, 0x12, 0x14, 0x0a, 0x0f, 0x43, 0x53,
	0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0xc0, 0x50,
	0x12, 0x14, 0x0a, 0x0f, 0x53, 0x43, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x10, 0xc1, 0x50, 0x12, 0x13, 0x0a, 0x0e, 0x43, 0x53, 0x5f, 0x46, 0x52, 0x49,
	0x45, 0x4e, 0x44, 0x51, 0x55, 0x45, 0x52, 0x59, 0x10, 0xc2, 0x50, 0x12, 0x13, 0x0a, 0x0e, 0x53,
	0x43, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x51, 0x55, 0x45, 0x52, 0x59, 0x10, 0xc3, 0x50,
	0x12, 0x13, 0x0a, 0x0e, 0x43, 0x53, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x42, 0x4c, 0x41,
	0x43, 0x4b, 0x10, 0xc4, 0x50, 0x12, 0x13, 0x0a, 0x0e, 0x53, 0x43, 0x5f, 0x46, 0x52, 0x49, 0x45,
	0x4e, 0x44, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x10, 0xc5, 0x50, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x53,
	0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x4d, 0x41, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xa0, 0x51,
	0x12, 0x14, 0x0a, 0x0f, 0x53, 0x53, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x4d, 0x41, 0x50, 0x5f,
	0x52, 0x53, 0x50, 0x10, 0xa1, 0x51, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x43, 0x5f, 0x45, 0x4e, 0x54,
	0x45, 0x52, 0x4d, 0x41, 0x50, 0x10, 0xa2, 0x51, 0x12, 0x0e, 0x0a, 0x08, 0x47, 0x41, 0x4d, 0x45,
	0x5f, 0x4d, 0x41, 0x58, 0x10, 0xa0, 0x8d, 0x06, 0x2a, 0x47, 0x0a, 0x06, 0x52, 0x50, 0x43, 0x4d,
	0x53, 0x47, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x70, 0x63, 0x4e, 0x6f, 0x10, 0x00, 0x12, 0x18, 0x0a,
	0x14, 0x4c, 0x32, 0x47, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4e, 0x55,
	0x4d, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x32, 0x4c, 0x5f, 0x47,
	0x45, 0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x52, 0x53, 0x50, 0x10,
	0x02, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2e, 0x2f, 0x61, 0x6b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mainID_proto_rawDescOnce sync.Once
	file_mainID_proto_rawDescData = file_mainID_proto_rawDesc
)

func file_mainID_proto_rawDescGZIP() []byte {
	file_mainID_proto_rawDescOnce.Do(func() {
		file_mainID_proto_rawDescData = protoimpl.X.CompressGZIP(file_mainID_proto_rawDescData)
	})
	return file_mainID_proto_rawDescData
}

var file_mainID_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_mainID_proto_goTypes = []interface{}{
	(MSG)(0),    // 0: MSG
	(RPCMSG)(0), // 1: RPCMSG
}
var file_mainID_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_mainID_proto_init() }
func file_mainID_proto_init() {
	if File_mainID_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mainID_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mainID_proto_goTypes,
		DependencyIndexes: file_mainID_proto_depIdxs,
		EnumInfos:         file_mainID_proto_enumTypes,
	}.Build()
	File_mainID_proto = out.File
	file_mainID_proto_rawDesc = nil
	file_mainID_proto_goTypes = nil
	file_mainID_proto_depIdxs = nil
}
